# Makefile.in generated by automake 1.9.6 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/mysar
pkglibdir = $(libdir)/mysar
pkgincludedir = $(includedir)/mysar
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
bin_PROGRAMS = mysar$(EXEEXT)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/config.h.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_mysar_OBJECTS = mysar-mysar.$(OBJEXT) mysar-database.$(OBJEXT) \
	mysar-sql.$(OBJEXT) mysar-utils.$(OBJEXT) \
	mysar-unzip.$(OBJEXT) mysar-debug.$(OBJEXT) \
	mysar-config.$(OBJEXT) mysar-lock.$(OBJEXT)
mysar_OBJECTS = $(am_mysar_OBJECTS)
mysar_LDADD = $(LDADD)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I.
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(mysar_SOURCES)
DIST_SOURCES = $(mysar_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /srv/www/htdocs/mysar/bin/mysar-binary-importer/config/missing --run aclocal-1.9
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /srv/www/htdocs/mysar/bin/mysar-binary-importer/config/missing --run tar
AUTOCONF = ${SHELL} /srv/www/htdocs/mysar/bin/mysar-binary-importer/config/missing --run autoconf
AUTOHEADER = ${SHELL} /srv/www/htdocs/mysar/bin/mysar-binary-importer/config/missing --run autoheader
AUTOMAKE = ${SHELL} /srv/www/htdocs/mysar/bin/mysar-binary-importer/config/missing --run automake-1.9
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = -I/usr/include/mariadb
CXXFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
GREP = /usr/bin/grep
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = -L/usr/lib64
LIBOBJS = 
LIBS = -lz -lmysqlclient -lmysqlclient 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /srv/www/htdocs/mysar/bin/mysar-binary-importer/config/missing --run makeinfo
OBJEXT = o
PACKAGE = mysar
PACKAGE_BUGREPORT = cassiano@polaco.pro.br
PACKAGE_NAME = mysar
PACKAGE_STRING = mysar 2.1.4
PACKAGE_TARNAME = mysar
PACKAGE_VERSION = 2.1.4
PATH_SEPARATOR = :
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
VERSION = 2.1.4
ac_ct_CC = gcc
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build_alias = 
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host_alias = 
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = /srv/www/htdocs/mysar/bin/mysar-binary-importer/config/install-sh
libdir = ${exec_prefix}/lib64
libexecdir = ${exec_prefix}/lib
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = /etc
target_alias = 
mysar_SOURCES = mysar.c \
		database.c \
		sql.c \
		utils.c \
		unzip.c \
		debug.c \
		config.c \
		lock.c \
		mysar.h \
		db_layout.h

mysar_CFLAGS = -DSYSCONFDIR=\"$(sysconfdir)\"
all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

config.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status src/config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	cd $(top_srcdir) && $(AUTOHEADER)
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
mysar$(EXEEXT): $(mysar_OBJECTS) $(mysar_DEPENDENCIES) 
	@rm -f mysar$(EXEEXT)
	$(LINK) $(mysar_LDFLAGS) $(mysar_OBJECTS) $(mysar_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/mysar-config.Po
include ./$(DEPDIR)/mysar-database.Po
include ./$(DEPDIR)/mysar-debug.Po
include ./$(DEPDIR)/mysar-lock.Po
include ./$(DEPDIR)/mysar-mysar.Po
include ./$(DEPDIR)/mysar-sql.Po
include ./$(DEPDIR)/mysar-unzip.Po
include ./$(DEPDIR)/mysar-utils.Po

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

mysar-mysar.o: mysar.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mysar_CFLAGS) $(CFLAGS) -MT mysar-mysar.o -MD -MP -MF "$(DEPDIR)/mysar-mysar.Tpo" -c -o mysar-mysar.o `test -f 'mysar.c' || echo '$(srcdir)/'`mysar.c; \
	then mv -f "$(DEPDIR)/mysar-mysar.Tpo" "$(DEPDIR)/mysar-mysar.Po"; else rm -f "$(DEPDIR)/mysar-mysar.Tpo"; exit 1; fi
#	source='mysar.c' object='mysar-mysar.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mysar_CFLAGS) $(CFLAGS) -c -o mysar-mysar.o `test -f 'mysar.c' || echo '$(srcdir)/'`mysar.c

mysar-mysar.obj: mysar.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mysar_CFLAGS) $(CFLAGS) -MT mysar-mysar.obj -MD -MP -MF "$(DEPDIR)/mysar-mysar.Tpo" -c -o mysar-mysar.obj `if test -f 'mysar.c'; then $(CYGPATH_W) 'mysar.c'; else $(CYGPATH_W) '$(srcdir)/mysar.c'; fi`; \
	then mv -f "$(DEPDIR)/mysar-mysar.Tpo" "$(DEPDIR)/mysar-mysar.Po"; else rm -f "$(DEPDIR)/mysar-mysar.Tpo"; exit 1; fi
#	source='mysar.c' object='mysar-mysar.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mysar_CFLAGS) $(CFLAGS) -c -o mysar-mysar.obj `if test -f 'mysar.c'; then $(CYGPATH_W) 'mysar.c'; else $(CYGPATH_W) '$(srcdir)/mysar.c'; fi`

mysar-database.o: database.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mysar_CFLAGS) $(CFLAGS) -MT mysar-database.o -MD -MP -MF "$(DEPDIR)/mysar-database.Tpo" -c -o mysar-database.o `test -f 'database.c' || echo '$(srcdir)/'`database.c; \
	then mv -f "$(DEPDIR)/mysar-database.Tpo" "$(DEPDIR)/mysar-database.Po"; else rm -f "$(DEPDIR)/mysar-database.Tpo"; exit 1; fi
#	source='database.c' object='mysar-database.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mysar_CFLAGS) $(CFLAGS) -c -o mysar-database.o `test -f 'database.c' || echo '$(srcdir)/'`database.c

mysar-database.obj: database.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mysar_CFLAGS) $(CFLAGS) -MT mysar-database.obj -MD -MP -MF "$(DEPDIR)/mysar-database.Tpo" -c -o mysar-database.obj `if test -f 'database.c'; then $(CYGPATH_W) 'database.c'; else $(CYGPATH_W) '$(srcdir)/database.c'; fi`; \
	then mv -f "$(DEPDIR)/mysar-database.Tpo" "$(DEPDIR)/mysar-database.Po"; else rm -f "$(DEPDIR)/mysar-database.Tpo"; exit 1; fi
#	source='database.c' object='mysar-database.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mysar_CFLAGS) $(CFLAGS) -c -o mysar-database.obj `if test -f 'database.c'; then $(CYGPATH_W) 'database.c'; else $(CYGPATH_W) '$(srcdir)/database.c'; fi`

mysar-sql.o: sql.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mysar_CFLAGS) $(CFLAGS) -MT mysar-sql.o -MD -MP -MF "$(DEPDIR)/mysar-sql.Tpo" -c -o mysar-sql.o `test -f 'sql.c' || echo '$(srcdir)/'`sql.c; \
	then mv -f "$(DEPDIR)/mysar-sql.Tpo" "$(DEPDIR)/mysar-sql.Po"; else rm -f "$(DEPDIR)/mysar-sql.Tpo"; exit 1; fi
#	source='sql.c' object='mysar-sql.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mysar_CFLAGS) $(CFLAGS) -c -o mysar-sql.o `test -f 'sql.c' || echo '$(srcdir)/'`sql.c

mysar-sql.obj: sql.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mysar_CFLAGS) $(CFLAGS) -MT mysar-sql.obj -MD -MP -MF "$(DEPDIR)/mysar-sql.Tpo" -c -o mysar-sql.obj `if test -f 'sql.c'; then $(CYGPATH_W) 'sql.c'; else $(CYGPATH_W) '$(srcdir)/sql.c'; fi`; \
	then mv -f "$(DEPDIR)/mysar-sql.Tpo" "$(DEPDIR)/mysar-sql.Po"; else rm -f "$(DEPDIR)/mysar-sql.Tpo"; exit 1; fi
#	source='sql.c' object='mysar-sql.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mysar_CFLAGS) $(CFLAGS) -c -o mysar-sql.obj `if test -f 'sql.c'; then $(CYGPATH_W) 'sql.c'; else $(CYGPATH_W) '$(srcdir)/sql.c'; fi`

mysar-utils.o: utils.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mysar_CFLAGS) $(CFLAGS) -MT mysar-utils.o -MD -MP -MF "$(DEPDIR)/mysar-utils.Tpo" -c -o mysar-utils.o `test -f 'utils.c' || echo '$(srcdir)/'`utils.c; \
	then mv -f "$(DEPDIR)/mysar-utils.Tpo" "$(DEPDIR)/mysar-utils.Po"; else rm -f "$(DEPDIR)/mysar-utils.Tpo"; exit 1; fi
#	source='utils.c' object='mysar-utils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mysar_CFLAGS) $(CFLAGS) -c -o mysar-utils.o `test -f 'utils.c' || echo '$(srcdir)/'`utils.c

mysar-utils.obj: utils.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mysar_CFLAGS) $(CFLAGS) -MT mysar-utils.obj -MD -MP -MF "$(DEPDIR)/mysar-utils.Tpo" -c -o mysar-utils.obj `if test -f 'utils.c'; then $(CYGPATH_W) 'utils.c'; else $(CYGPATH_W) '$(srcdir)/utils.c'; fi`; \
	then mv -f "$(DEPDIR)/mysar-utils.Tpo" "$(DEPDIR)/mysar-utils.Po"; else rm -f "$(DEPDIR)/mysar-utils.Tpo"; exit 1; fi
#	source='utils.c' object='mysar-utils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mysar_CFLAGS) $(CFLAGS) -c -o mysar-utils.obj `if test -f 'utils.c'; then $(CYGPATH_W) 'utils.c'; else $(CYGPATH_W) '$(srcdir)/utils.c'; fi`

mysar-unzip.o: unzip.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mysar_CFLAGS) $(CFLAGS) -MT mysar-unzip.o -MD -MP -MF "$(DEPDIR)/mysar-unzip.Tpo" -c -o mysar-unzip.o `test -f 'unzip.c' || echo '$(srcdir)/'`unzip.c; \
	then mv -f "$(DEPDIR)/mysar-unzip.Tpo" "$(DEPDIR)/mysar-unzip.Po"; else rm -f "$(DEPDIR)/mysar-unzip.Tpo"; exit 1; fi
#	source='unzip.c' object='mysar-unzip.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mysar_CFLAGS) $(CFLAGS) -c -o mysar-unzip.o `test -f 'unzip.c' || echo '$(srcdir)/'`unzip.c

mysar-unzip.obj: unzip.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mysar_CFLAGS) $(CFLAGS) -MT mysar-unzip.obj -MD -MP -MF "$(DEPDIR)/mysar-unzip.Tpo" -c -o mysar-unzip.obj `if test -f 'unzip.c'; then $(CYGPATH_W) 'unzip.c'; else $(CYGPATH_W) '$(srcdir)/unzip.c'; fi`; \
	then mv -f "$(DEPDIR)/mysar-unzip.Tpo" "$(DEPDIR)/mysar-unzip.Po"; else rm -f "$(DEPDIR)/mysar-unzip.Tpo"; exit 1; fi
#	source='unzip.c' object='mysar-unzip.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mysar_CFLAGS) $(CFLAGS) -c -o mysar-unzip.obj `if test -f 'unzip.c'; then $(CYGPATH_W) 'unzip.c'; else $(CYGPATH_W) '$(srcdir)/unzip.c'; fi`

mysar-debug.o: debug.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mysar_CFLAGS) $(CFLAGS) -MT mysar-debug.o -MD -MP -MF "$(DEPDIR)/mysar-debug.Tpo" -c -o mysar-debug.o `test -f 'debug.c' || echo '$(srcdir)/'`debug.c; \
	then mv -f "$(DEPDIR)/mysar-debug.Tpo" "$(DEPDIR)/mysar-debug.Po"; else rm -f "$(DEPDIR)/mysar-debug.Tpo"; exit 1; fi
#	source='debug.c' object='mysar-debug.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mysar_CFLAGS) $(CFLAGS) -c -o mysar-debug.o `test -f 'debug.c' || echo '$(srcdir)/'`debug.c

mysar-debug.obj: debug.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mysar_CFLAGS) $(CFLAGS) -MT mysar-debug.obj -MD -MP -MF "$(DEPDIR)/mysar-debug.Tpo" -c -o mysar-debug.obj `if test -f 'debug.c'; then $(CYGPATH_W) 'debug.c'; else $(CYGPATH_W) '$(srcdir)/debug.c'; fi`; \
	then mv -f "$(DEPDIR)/mysar-debug.Tpo" "$(DEPDIR)/mysar-debug.Po"; else rm -f "$(DEPDIR)/mysar-debug.Tpo"; exit 1; fi
#	source='debug.c' object='mysar-debug.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mysar_CFLAGS) $(CFLAGS) -c -o mysar-debug.obj `if test -f 'debug.c'; then $(CYGPATH_W) 'debug.c'; else $(CYGPATH_W) '$(srcdir)/debug.c'; fi`

mysar-config.o: config.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mysar_CFLAGS) $(CFLAGS) -MT mysar-config.o -MD -MP -MF "$(DEPDIR)/mysar-config.Tpo" -c -o mysar-config.o `test -f 'config.c' || echo '$(srcdir)/'`config.c; \
	then mv -f "$(DEPDIR)/mysar-config.Tpo" "$(DEPDIR)/mysar-config.Po"; else rm -f "$(DEPDIR)/mysar-config.Tpo"; exit 1; fi
#	source='config.c' object='mysar-config.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mysar_CFLAGS) $(CFLAGS) -c -o mysar-config.o `test -f 'config.c' || echo '$(srcdir)/'`config.c

mysar-config.obj: config.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mysar_CFLAGS) $(CFLAGS) -MT mysar-config.obj -MD -MP -MF "$(DEPDIR)/mysar-config.Tpo" -c -o mysar-config.obj `if test -f 'config.c'; then $(CYGPATH_W) 'config.c'; else $(CYGPATH_W) '$(srcdir)/config.c'; fi`; \
	then mv -f "$(DEPDIR)/mysar-config.Tpo" "$(DEPDIR)/mysar-config.Po"; else rm -f "$(DEPDIR)/mysar-config.Tpo"; exit 1; fi
#	source='config.c' object='mysar-config.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mysar_CFLAGS) $(CFLAGS) -c -o mysar-config.obj `if test -f 'config.c'; then $(CYGPATH_W) 'config.c'; else $(CYGPATH_W) '$(srcdir)/config.c'; fi`

mysar-lock.o: lock.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mysar_CFLAGS) $(CFLAGS) -MT mysar-lock.o -MD -MP -MF "$(DEPDIR)/mysar-lock.Tpo" -c -o mysar-lock.o `test -f 'lock.c' || echo '$(srcdir)/'`lock.c; \
	then mv -f "$(DEPDIR)/mysar-lock.Tpo" "$(DEPDIR)/mysar-lock.Po"; else rm -f "$(DEPDIR)/mysar-lock.Tpo"; exit 1; fi
#	source='lock.c' object='mysar-lock.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mysar_CFLAGS) $(CFLAGS) -c -o mysar-lock.o `test -f 'lock.c' || echo '$(srcdir)/'`lock.c

mysar-lock.obj: lock.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mysar_CFLAGS) $(CFLAGS) -MT mysar-lock.obj -MD -MP -MF "$(DEPDIR)/mysar-lock.Tpo" -c -o mysar-lock.obj `if test -f 'lock.c'; then $(CYGPATH_W) 'lock.c'; else $(CYGPATH_W) '$(srcdir)/lock.c'; fi`; \
	then mv -f "$(DEPDIR)/mysar-lock.Tpo" "$(DEPDIR)/mysar-lock.Po"; else rm -f "$(DEPDIR)/mysar-lock.Tpo"; exit 1; fi
#	source='lock.c' object='mysar-lock.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mysar_CFLAGS) $(CFLAGS) -c -o mysar-lock.obj `if test -f 'lock.c'; then $(CYGPATH_W) 'lock.c'; else $(CYGPATH_W) '$(srcdir)/lock.c'; fi`
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) config.h
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic ctags distclean distclean-compile \
	distclean-generic distclean-hdr distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-exec \
	install-exec-am install-info install-info-am install-man \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
